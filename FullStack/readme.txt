Проверка наличия npm командой "npm -v" если не установлен то установить командой "npm i"
Инициализация проекта и фаила package.json командой "npm inint" и конфигурирую данный файл
Создание index.js
Так как бэк делается на фреймворке express нужно его установить командой "npm install express"
настройка простого сервера для этого в index.js подключаем его с помощью глобальной функции require, который находится в nodejs, мы не прописываем ни какой относительный путь, потому что мы берем все иы содержимого node_modules
теперь нам необходимо создать экземпляр фреймворка с помощью переменной app
Что бы запустить простой сервер пишем app.listen("указываем порт например"5000 и "далее мы можем передать call back функцию, которая будет выполнена когда сервер запустится", например ключевое слово funktion() )
или в виде стрелочной функции () => console.log('Server has been started')
но что бы убедится в работе сервера нужно описать работу определенного роута с помощью конструкции app.get(), т.е. будем обрабатывать гет запросы, мы будем смотреть корень нашего приложения('/') 
и вторым параметром мы передаем call back функцию с двумя параметрами (request, response) => в request находится все то что пользователь отправляет на сервер, т.е. это запрос, response это ответ сервера
что бы запустить пишем в терминале node index.js и переходим в браузер и вводим localhost:5000
после того как мы убедились в работе сервер удаляем созданный роут app.get()
создаем файл app.js в котором мы будем описывать все наше приложение
в файле index.js необходимо подключить app.js следующим способом const app = require('./app');
в файле index.js создаем переменную port следующим способом const port = process.env.PORT || 5000; можем задавать значение через консоль и если она не задана будем использовать значение по умолчанию т.е. 5000
`Server is running on ${port}` обратные кавычки для того чтобы мы могли воспользоваться внутренней шаблонизацией
теперь переходим в файл package.json и в скрипте вместо test пишем "start": "node index",
тестируем запуск командой в терминале npm run start
но для того что бы мы видели изменения приложения на лету необходимо установить дополнительный пакет где указываем что хотим установить зависимости для разработки npm i nodemon --save-dev
в файл package.json и в скрипте дописываем "server": "nodemon index"
теперь для запуска используем команду в терминале npm run server

СОЗДАНИЕ РОУТОВ АВТОРИЗАЦИИ

нужно воспользоваться специальной сущностью которая есть в express специально для создания роутов express.Router() не забываем его экспортировать module.exports = router;






